jsys.extendPath						key
jsys.extendUserPath					key
jsys.getFieldValueInContext			fieldName
jsys.getModule
jsys.getPath
jsys.getPayload						payloadID
jsys.getPrimaryKey					instance
jsys.getSubModule
jsys.getSubModuleSelectedKeys
jsys.getSubModuleSelectedValues
jsys.getSubModuleValue				field
jsys.getUserKey
jsys.jsonArrayObjectAppendValues	type ; newValues ; array ; path
jsys.jsonArrayObjectWrapValues		type ; valueList
jsys.recordState
jsys.setErrorLog					severity ; notify
jsys.setFieldNameInContext			fieldName
jsys.setSubModuleDAPIRead			layouts ; response ; limit ; offset




// PASSWORD STRENGTH

// This function evaluates the strength of a password based  
// on various characteristics and assigns a strength level 
// (“Weak,” “Medium,” “Strong,” or “Very Strong”).

// Function Name : passwordStrength
// Parameters : password
// Use example : passwordStrength ( "x7GAgagMPQqMfF3pCdVzs" )


// This function evaluates how strong a password is based on its length and the variety of characters it contains, 
// such as numbers, uppercase letters, lowercase letters, and special symbols. Each type of character contributes to a total score, 
// with longer passwords and more diverse characters earning higher points. Based on the score, the password is rated as 
// “Weak,” “Medium,” “Strong,” or “Very Strong.” It’s a quick way to check if a password is secure enough.

// GitHub : 
// BD Link : https://www.briandunning.com/cf/2787
// Written by: jonni@me.com
// V 1.0
